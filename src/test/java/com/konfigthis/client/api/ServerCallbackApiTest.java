/*
 * UploadThing REST API
 * UploadThing is the easiest way to add file uploads to your full stack TypeScript application. Many services have tried to build a \"better S3\", but in our opinion, none found the right compromise of ownership, flexibility and safety.
 *
 * The version of the OpenAPI document: 6.4.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.ServerCallbackGetDataResponse;
import com.konfigthis.client.model.ServerCallbackSetDataRequest;
import com.konfigthis.client.model.ServerCallbackSetDataResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ServerCallbackApi
 */
@Disabled
public class ServerCallbackApiTest {

    private static ServerCallbackApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new ServerCallbackApi(apiClient);
    }

    /**
     * Poll for server callback data. This is used to retrieve the data returned from &#x60;onUploadComplete&#x60; callback.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDataTest() throws ApiException {
        String authorization = null;
        ServerCallbackGetDataResponse response = api.getData(authorization)
                .execute();
        // TODO: test validations
    }

    /**
     * Set server callback data. This is used to set the data returned from &#x60;onUploadComplete&#x60; callback.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void setDataTest() throws ApiException {
        String fileKey = null;
        String xUploadthingVersion = null;
        Object callbackData = null;
        String xUploadthingFePackage = null;
        String xUploadthingBeAdapter = null;
        ServerCallbackSetDataResponse response = api.setData(fileKey, xUploadthingVersion)
                .callbackData(callbackData)
                .xUploadthingFePackage(xUploadthingFePackage)
                .xUploadthingBeAdapter(xUploadthingBeAdapter)
                .execute();
        // TODO: test validations
    }

}
